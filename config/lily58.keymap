/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_word_caps: hold_word_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_WORD_CAPS";
            bindings = <&sk>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        key_or_layer: key_or_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_OR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };

        tapdancelayer: tapdancelayer {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCELAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 5>;
        };

        long_or_short: long_or_short {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_OR_SHORT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            require-prior-idle-ms = <150>;
        };
    };

    macros {
        double_it: double_it {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "DOUBLE_IT";
        };
    };

    combos {
        compatible = "zmk,combos";

        ctrl_right {
            bindings = <&kp RCTRL>;
            key-positions = <54 43>;
        };

        lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <42 53>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE                     &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                                  &kp N6          &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB                       &kp Q   &kp W   &kp E     &kp R     &kp T                                   &kp Y           &kp U     &kp I      &kp O    &kp P     &kp MINUS
&hold_word_caps LEFT_SHIFT 0  &kp A   &kp S   &kp D     &kp F     &kp G                                   &kp H           &kp J     &kp K      &kp L    &kp SEMI  &mt RSHIFT SQT
&kp LCTRL                     &kp Z   &kp X   &kp C     &kp V     &kp B         &kp LBKT       &kp RBKT   &kp N           &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                              &kp LALT  &kp LGUI  &lt 2 ESCAPE  &lt 4 ENTER    &kp SPACE  &tapdancelayer  &kp BSPC  &kp RGUI
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans        &trans    &trans  &trans     &trans     &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans          &trans        &trans     &trans    &trans
&kp GRAVE  &trans  &kp N2  &kp N3   &kp N4   &kp N5                     &kp HOME     &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans    &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &kp LEFT     &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans    &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS       &kp EQUAL     &kp LBKT   &kp RBKT  &kp BSLH
                           &trans   &trans   &trans   &trans    &trans  &trans       &trans          &trans
            >;
        };

        numpad {
            bindings = <
&none  &none  &none  &none  &none  &none                            &none            &kp KP_DIVIDE    &kp KP_ASTERISK  &kp LG(KP_SUBTRACT)  &none         &none
&none  &none  &none  &none  &none  &none                            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS          &none         &none
&none  &none  &none  &none  &none  &none                            &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ENTER         &none         &none
&none  &none  &none  &none  &none  &none  &none    &none            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT           &kp KP_COMMA  &none
                     &none  &none  &none  &none    &kp KP_NUMBER_0  &none            &none            &none
            >;
        };

        braces {
            bindings = <
&none  &none          &none             &none           &none                 &none                                             &none            &none                  &none            &none              &none             &none
&none  &kp GRAVE      &kp EXCLAMATION   &kp DQT         &kp SINGLE_QUOTE      &none                                             &kp EQUAL        &kp PLUS               &kp MINUS        &kp STAR           &kp SLASH         &none
&none  &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &double_it AMPERSAND                              &double_it PIPE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN  &none
&none  &none          &none             &none           &none                 &none                 &kp SEMICOLON    &kp COLON  &none            &none                  &none            &none              &none             &none
                                        &none           &none                 &none                 &trans           &kp EQUAL  &none            &none                  &none
            >;
        };

        layer_5 {
            bindings = <
&none  &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none  &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none   &none
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&none  &none   &none   &none   &none   &none   &none    &none  &none   &none   &none   &none   &none   &none
                       &none   &none   &none   &none    &none  &trans  &none   &none
            >;
        };
    };
};
